<MudAppBar Elevation="4" Color="Color.Primary">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="ToggleDrawer" />
    <MudText Typo="Typo.h6" Class="ml-2">My Application</MudText>
    <MudSpacer />
    <MudHidden Breakpoint="Breakpoint.SmAndDown">
        <MudButton Variant="Variant.Text" Color="Color.Inherit" Class="mx-2">Home</MudButton>
        <MudButton Variant="Variant.Text" Color="Color.Inherit" Class="mx-2" Href="/ManageRolePermissions">Manage Permissions</MudButton>
        <MudButton Variant="Variant.Text" Color="Color.Inherit" Class="mx-2">Contact</MudButton>
        <MudSwitch Value="@DarkTheme" Label="Dark Theme" ValueChanged="DarkThemeChanged" />
        <div class="mx-1">
            <AuthorizeView>
                <Authorized>
                    <MudButton Variant="Variant.Text" Color="Color.Inherit" Class="mx-2" Href="logout">Logout</MudButton>
                </Authorized>
                <NotAuthorized>
                    <MudButton Variant="Variant.Text" Color="Color.Inherit" Class="mx-2" Href="login">Login</MudButton>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </MudHidden>
    <MudIconButton Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Inherit" Edge="Edge.End" />
</MudAppBar>

<MudDrawer @bind-Open="_drawerOpen" Anchor="Anchor.Left" Variant="DrawerVariant.Temporary" Elevation="1">
    <MudDrawerHeader>Menu</MudDrawerHeader>
    <MudNavMenu>
        <AuthorizeView>
            <Authorized>
                <MudNavLink Href="logout">Logout</MudNavLink>
            </Authorized>
            <NotAuthorized>
                <MudNavLink Href="login">Login</MudNavLink>
            </NotAuthorized>
        </AuthorizeView>
        <MudNavLink Href="/" Match="NavLinkMatch.All">Home</MudNavLink>
        <MudNavLink Href="/ManageRolePermissions">Manage Permissions</MudNavLink>
        <MudNavLink Href="/contact">Contact</MudNavLink>
    </MudNavMenu>
</MudDrawer>

@code {
    private bool _drawerOpen = false;

    [Parameter]
    public bool DarkTheme { get; set; }

    [Parameter]
    public EventCallback<bool> DarkThemeChanged { get; set; }

    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task DarkThemeChangedHandler(bool value)
    {
        DarkTheme = value;
        await DarkThemeChanged.InvokeAsync(value);
    }
}