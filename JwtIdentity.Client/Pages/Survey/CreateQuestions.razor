@page "/survey/createquestions/{SurveyId}"
@namespace JwtIdentity.Client.Pages.Survey
@inherits CreateQuestionsModel
@attribute [Authorize(Policy = Permissions.CreateSurvey)]

<MudText Typo="Typo.h4">Create Questions</MudText>
<MudText Typo="Typo.h5">Survey Title: @Survey.Title</MudText>

<div Class="d-md-flex flex-row justify-space-evenly gap-2">
    <MudStack Class="flex-1">
        <MudPaper Class="p-2">
            <MudStack Spacing="1">
                <MudSelect Label="Select the Question Type"
                           @bind-Value="@SelectedQuestionType"
                           Variant="Variant.Filled"
                           Immediate="true"
                           ErrorText="Please select a type"
                           Error="@(string.IsNullOrWhiteSpace(SelectedQuestionType))">
                    @foreach (var questionType in QuestionTypes)
                    {
                        <MudSelectItem Value="@(StringHelper.PascalCaseToWords( questionType))" />
                    }
                </MudSelect>

                <MudText Typo="Typo.h6" Class="mt-5">Create a @Common.Helpers.StringHelper.PascalCaseToWords(SelectedQuestionType) Question</MudText>
                <MudTextField id="Text" Label="Question Text" @bind-Value="QuestionText" Variant="Variant.Filled" Lines="1" MaxLines="5" AutoGrow="true" Immediate="true" Counter="50" MaxLength="50" />
            </MudStack>

            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" OnClick="AddQuestionToSurvey" Disabled="@AddQuestionToSurveyDisabled">Add Question to Survey</MudButton>
        </MudPaper>

        @if (SelectedQuestionType.Replace(" ", "") == Enum.GetName(QuestionType.MultipleChoice))
        {
            <MudPaper>
                <MudText Typo="Typo.h6" Class="mb-1">Add the Question Choices</MudText>
                <MudTextField id="Choice" Label="Choice Text" @bind-Value="NewChoiceOptionText" Variant="Variant.Filled" Lines="1" MaxLines="5" AutoGrow="true" Immediate="true" Counter="50" MaxLength="50" />

                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" OnClick="@AddChoiceOption" Disabled="@(string.IsNullOrWhiteSpace(NewChoiceOptionText))">Add Choice</MudButton>

                <div style="height:150px;overflow:auto;" class="mt-2">
                    <MudList T="string" ReadOnly="true" Dense="true">
                        @foreach (var choice in MultipleChoiceQuestion.Options)
                        {
                            <MudListItem Text="@choice.OptionText" />
                        }
                    </MudList>
                </div>
            </MudPaper>
        }
    </MudStack>
    <MudPaper Class="p-2 flex-1">
        <MudText Typo="Typo.h4">Survey Questions</MudText>
        @{
            int i = 0;
            if (Survey?.Questions != null && Survey.Questions.Count > 0)
            {
                <div style="overflow:auto;height: 65vh;">
                    <MudList T="string" ReadOnly="true" Dense="true">
                        @foreach (var question in Survey.Questions)
                        {
                            i++;
                            <MudListItem Text="@($"{@i}. {@question.Text}")" />
                        }
                    </MudList>
                </div>
            }
        }
    </MudPaper>
</div>