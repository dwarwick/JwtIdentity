@page "/mysurveys/surveysicreated"
@namespace JwtIdentity.Client.Pages.Survey
@inherits SurveysICreatedModel
@attribute [Authorize(Policy = Permissions.CreateSurvey)]

<PageTitle>Survey Shark - Surveys I Created</PageTitle>

<style>
    /* Grid button styling */
    .survey-action-button {
        margin: 4px;
        min-width: 80px;
        height: 32px;
        font-size: 0.75rem;
        font-weight: 500;
        letter-spacing: 0.02em;
        padding: 4px 10px;
        border-radius: 4px;
        transition: all 0.2s ease-in-out;
        box-shadow: 0 2px 4px rgba(0,0,0,0.12);
    }

        /* Button hover effects */
        .survey-action-button:not(.disabled):hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

        /* Style for disabled buttons */
        .survey-action-button.disabled {
            opacity: 0.65;
            cursor: not-allowed;
            box-shadow: none !important;
            transform: none !important;
        }

    /* Facebook share button */
    .fb-share-button {
        height: 32px;
        margin: 4px;
        padding: 4px 10px;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 500;
        transition: all 0.2s ease-in-out;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

        .fb-share-button:not(.disabled):hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.25);
        }

        .fb-share-button.disabled {
            opacity: 0.65;
            cursor: not-allowed;
            box-shadow: none !important;
            transform: none !important;
        }

    /* Specific button colors */
    .preview-button {
        background-color: var(--mud-palette-success) !important;
        color: var(--mud-palette-success-text) !important;
    }

    .copy-button {
        background-color: var(--mud-palette-info) !important;
        color: var(--mud-palette-info-text) !important;
    }

    .edit-button {
        background-color: var(--mud-palette-warning) !important;
        color: var(--mud-palette-warning-text) !important;
    }

    .charts-button {
        background-color: var(--mud-palette-tertiary) !important;
        color: var(--mud-palette-tertiary-text) !important;
    }

    .grid-button {
        background-color: var(--mud-palette-secondary) !important;
        color: var(--mud-palette-secondary-text) !important;
    }

    /* Action buttons container */
    .action-buttons-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: flex-start;
        align-items: center;
    }
</style>

<h3>Surveys I've Created</h3>

<SfGrid DataSource="@UserSurveys" AllowPaging="true" AllowSorting="true" AllowFiltering="true" AllowResizing="true" FrozenColumns="@FrozenColumns" AllowTextWrap="true" TextWrapSettings="@GridSettings.TextWrapSettings" GridLines="@GridSettings.GridLines">
    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
    <GridColumns>
        <GridColumn HeaderText="Actions" AutoFit="true" AllowResizing="false" AllowReordering="false">
            <Template>
                <div class="action-buttons-container">
                    @{
                        var guid = (context as SurveyViewModel).Guid;
                        var isPublished = (context as SurveyViewModel).Published;

                        <div> @* Preview Button *@
                            <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 0 })" IsButton="true">
                                <MudButton Class="survey-action-button preview-button"                                           
                                           OnClick="@(async () => await HandlePreviewClick(guid))"                                           
                                           title="Preview Survey"
                                           Variant="Variant.Filled">
                                    <MudIcon Icon="@Icons.Material.Filled.Visibility" Class="mr-1" Size="MudBlazor.Size.Small" /> Preview
                                </MudButton>
                            </DemoBorder>
                            <DemoPopup CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 0 })" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft">
                                <MudText Typo="Typo.body2">Preview your survey without recording responses. Go ahead and click the Preview button.</MudText>                                
                            </DemoPopup>
                        </div>

                        <div> @* Copy Link Button *@
                            <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 1 })" IsButton="true">
                                <MudButton Class=@($"survey-action-button copy-button {ShareButtonDisabled(isPublished, false)}")
                                           Variant="Variant.Filled"
                                           OnClick="@(async () => await CopySurveyLinkAsync(guid))"
                                           title="@(GetTitleText(isPublished))">
                                    <MudIcon Icon="@Icons.Material.Filled.ContentCopy" Class="mr-1" Size="MudBlazor.Size.Small" /> Copy Link
                                </MudButton>
                            </DemoBorder>
                            @{
                                string copyStepText = DemoStep == 1 ? @"Copy the survey link to share manually. This button is disabled until the survey is published.
                                Go ahead click the copy button to copy a link that you can share. People who click the link can take your survey.
                                After you copy the link, click Next." : 
                                DemoStep == 2 ? @"Normally, after you click the copy button, you would paste the link into an email or share it to social media or text message.
                                For this demo, when you click Next, you are just going to navigate to the survey so that you can take the survey and submit it." : "";
                            }
                            <DemoPopup CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 1,2 })" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft">
                                <MudText Typo="Typo.body2" Style="white-space: pre-line">@copyStepText</MudText>
                                <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 2 })" IsButton="true">
                                @if (DemoStep == 2)
                                {
                                    <MudButton OnClick="@(async () => await NextDemoStep(guid))" Variant="Variant.Filled" Color="Color.Success">Next</MudButton>
                                }                                    
                                </DemoBorder>
                            </DemoPopup>
                        </div>

                        <div> @* Facebook Share Button *@
                            <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 3 })" IsButton="true">
                                <div class=@($"fb-share-button d-flex {ShareButtonDisabled(isPublished, false)}")
                                     data-href=@($"https://{Utility.Domain}/survey/{guid}")
                                     data-layout="button_count"
                                     data-size="small"
                                     @onclick="@(() => HandleShareClick(guid, isPublished))">
                                    <div class="fb-xfbml-parse-ignore mud-palette-white">Share</div>
                                    <svg viewBox="0 0 12 12" preserveAspectRatio="xMidYMid meet">
                                        <path class="svg-icon-path" d="M9.1,0.1V2H8C7.6,2,7.3,2.1,7.1,2.3C7,2.4,6.9,2.7,6.9,3v1.4H9L8.8,6.5H6.9V12H4.7V6.5H2.9V4.4h1.8V2.8 c0-0.9,0.3-1.6,0.7-2.1C6,0.2,6.6,0,7.5,0C8.2,0,8.7,0,9.1,0.1z"></path>
                                    </svg>
                                </div>
                            </DemoBorder>
                            <DemoPopup CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 3 })" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft">
                                <MudText Typo="Typo.body2" Style="white-space: pre-line">Clicking the Facebook button allows you to share the survey directly on Facebook. 
                                You get to choose who you want to share it with.
                                @(isPublished ? "" : "This is disabled until the survey is published.")
                                Feel free to try it if you want and then click Next to continue the demo.</MudText>
                                <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 3 })" IsButton="true">
                                    <MudButton OnClick="@(async () => await NextDemoStep(guid))" Variant="Variant.Filled" Color="Color.Success">Next</MudButton>
                                </DemoBorder>
                            </DemoPopup>
                        </div>

                        <div> @* Edit Button *@
                            <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 4 })" IsButton="true">
                                <MudButton Class=@($"survey-action-button edit-button {ShareButtonDisabled(isPublished, true)}")
                                           Variant="Variant.Filled"
                                           OnClick="@(() => AddEditQuestions(guid, isPublished))">
                                    <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-1" Size="MudBlazor.Size.Small" /> Edit
                                </MudButton>
                            </DemoBorder>
                            <DemoPopup CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 4 })" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft">
                                <MudText Typo="Typo.body2">Edit lets you modify questions before publishing. @(isPublished ? "This button is disabled because the survey is published." : "")</MudText>
                                <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 4 })" IsButton="true">
                                    <MudButton OnClick="@(async () => await NextDemoStep(guid))" Variant="Variant.Filled" Color="Color.Success">Next</MudButton>
                                </DemoBorder>
                            </DemoPopup>
                        </div>

                        <div> @* Charts Button *@
                            <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 5, 6 })" IsButton="true">
                                <MudButton Class=@($"survey-action-button charts-button {ShareButtonDisabled(isPublished, false)}")
                                           Variant="Variant.Filled"
                                           OnClick="@(() => ViewCharts(guid, isPublished))">
                                    <MudIcon Icon="@Icons.Material.Filled.BarChart" Class="mr-1" Size="MudBlazor.Size.Small" /> Charts
                                </MudButton>
                            </DemoBorder>
                            @{
                                string chartStepText = DemoStep == 5 ? "To make the demo more realistic, we have simulated that 20 other users have taken the survey, so on the charts and later on the grid, you will see fake demo data." :
                                                        DemoStep == 6 ? "Click the Charts button to view charts of survey results." : "";                                        
                            }
                            <DemoPopup CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 5, 6 })" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft">
                                <MudText Typo="Typo.body2">@chartStepText</MudText>
                                @if (DemoStep == 5)
                                {
                                    <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 5 })" IsButton="true">
                                        <MudButton OnClick="@(async () => await NextDemoStep(guid))" Variant="Variant.Filled" Color="Color.Success">Next</MudButton>
                                    </DemoBorder>
                                }
                            </DemoPopup>
                        </div>

                        <div> @* Grid Button *@
                            <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 7 })" IsButton="true">
                                <MudButton Class=@($"survey-action-button grid-button {ShareButtonDisabled(isPublished, false)}")
                                           Variant="Variant.Filled"
                                           OnClick="@(() => ViewGrid(guid, isPublished))">
                                    <MudIcon Icon="@Icons.Material.Filled.TableChart" Class="mr-1" Size="MudBlazor.Size.Small" /> Grid
                                </MudButton>
                            </DemoBorder>
                            <DemoPopup CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 7 })" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft">
                                <MudText Typo="Typo.body2">Click the Grid button to view individual responses in a grid. @(isPublished ? "" : "It's disabled until the survey is published.")</MudText>                                
                            </DemoPopup>
                        </div>

                        <DemoPopup CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 8 })" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft">
                            <MudText Typo="Typo.body2">Go ahead and click the Preview button to preview what the survey will look like.</MudText>
                        </DemoPopup>
                    }
                </div>
            </Template>
        </GridColumn>
        <GridColumn Field="Title" HeaderText="Title" Width="200" />
        <GridColumn Field="Description" HeaderText="Description" Width="400" />
        @if (IsAdmin)
        {
            <GridColumn Field="CreatedBy.UserName" HeaderText="Created By" Width="160" AllowSorting="true" AllowFiltering="true" />
        }
        <GridColumn Field="NumberOfResponses" HeaderText="Responses" Width="120" TextAlign="TextAlign.Center" />
        <GridColumn Field="CreatedDate" HeaderText="Created Date" Width="160" Type=" ColumnType.Date" Format="d" />
    </GridColumns>
</SfGrid>