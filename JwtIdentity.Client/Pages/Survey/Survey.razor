@page "/survey/{SurveyId}"
@namespace JwtIdentity.Client.Pages.Survey
@inherits SurveyModel

<HeadContent>
    <meta property="og:url" content="@Url" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="@Survey?.Title" />
    <meta property="og:description" content="@Survey?.Description" />
    <meta property="og:image" content="@($"{Url}/images/logo.png")" />
</HeadContent>

@if (Survey != null && Survey.Id > 0)
{
    <MudText Typo="Typo.h4">@Survey.Title</MudText>
    <MudText Typo="Typo.h6">@Survey.Description</MudText>

    @foreach (var question in Survey.Questions.OrderBy(x => x.QuestionNumber))
    {
        int questionNumber = Survey.Questions.OrderBy(x => x.QuestionNumber).ToList().FindIndex(x => x.Id == question.Id) + 1;
        <MudText Typo="Typo.body1">@questionNumber. @question.Text</MudText>

        @if (question.Answers.Count > 0)
        {
            @if (question.QuestionType == QuestionType.MultipleChoice)
            {
                MultipleChoiceAnswerViewModel answer = question.Answers.FirstOrDefault() as MultipleChoiceAnswerViewModel;

                <MudRadioGroup @key="question" T="int" Value="answer.SelectedOptionId" ValueChanged="@((v) => HandleAnswerQuestion(answer, v))">
                    <MudStack Spacing="0">
                        @foreach (var option in ((MultipleChoiceQuestionViewModel)question).Options)
                        {
                            <MudRadio Label="@option.OptionText" Value="@option.Id" />
                        }
                    </MudStack>
                </MudRadioGroup>
            }

            else if (question.QuestionType == QuestionType.Text)
            {
                TextAnswerViewModel answer = question.Answers.FirstOrDefault() as TextAnswerViewModel;

                <MudTextField @key="question" T="string" Value="answer.Text" ValueChanged="@((t) => HandleAnswerQuestion(answer, t))" Label="Enter Answer Text" />
            }
            else if (question.QuestionType == QuestionType.TrueFalse)
            {
                TrueFalseAnswerViewModel answer = question.Answers.FirstOrDefault() as TrueFalseAnswerViewModel;

                <MudRadioGroup @key="question" T="bool" Value="answer.Value" ValueChanged="@((v) => HandleAnswerQuestion(answer, v))">
                    <MudStack Spacing="0" Row="true">
                        <MudRadio Label="True" Value="true" />
                        <MudRadio Label="False" Value="false" />
                    </MudStack>
                </MudRadioGroup>
            }
        }
    }
}