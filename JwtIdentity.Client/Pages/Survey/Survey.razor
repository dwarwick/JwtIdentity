@page "/survey/{SurveyId:guid}"
@namespace JwtIdentity.Client.Pages.Survey
@inherits SurveyModel
@using JwtIdentity.Client.Components.Survey

<PageTitle>Survey Shark - Survey</PageTitle>

<div class="survey-container">
    @if (!isCaptchaVerified && !Preview && !ViewAnswers)
    {
        <MudText Typo="Typo.h5" Class="mb-4" Align="Align.Center">Verification Required</MudText>
        <!-- reCAPTCHA widget with data-callback pointing to our JS function -->
        <div id="captcha-container">
            <div class="g-recaptcha" data-sitekey=@Configuration["ReCaptcha:SiteKey"] data-callback="onCaptchaSuccess"></div>
        </div>
        <MudText Typo="Typo.body2" Class="mt-4" Align="Align.Center">Please complete the CAPTCHA to proceed.</MudText>
    }
    else
    {
        @if (Preview)
        {
            <MudAlert Class="survey-alert" Severity="Severity.Info" Variant="Variant.Filled">
                You are in Preview Mode. You can answer the questions, but the answers will not be recorded. You cannot submit the survey.
            </MudAlert>
        }

        @if (Survey != null && Survey.Id > 0 && !Loading)
        {
            <MudText Typo="Typo.h4" Class="survey-title">@Survey.Title</MudText>
            <MudText Typo="Typo.subtitle1" Class="survey-description">@Survey.Description</MudText>

            if (IsAnonymousUser)
            {
                <div class="question-container">
                    <MudText>
                        <span class="question-number">0.</span>
                        <span class="question-text">
                            Since you are not logged in, you must agree to our <MudLink Href="/privacy-policy" Underline="Underline.None" Typo="Typo.inherit" Target="Target._blank">Privacy Policy<MudIcon Icon="@Icons.Material.Filled.OpenInNew" /></MudLink>
                            <span> and </span>
                            <MudLink Href="/terms-of-service" Underline="Underline.None" Typo="Typo.inherit" Target="Target._blank">Terms of Service<MudIcon Icon="@Icons.Material.Filled.OpenInNew" /></MudLink>
                            before you can take this survey.
                        </span>
                    </MudText>
                    <div class="options-container">
                        <MudPaper Elevation="0" Class="pa-2">
                            <MudRadioGroup T="bool" @bind-Value="AgreedToTerms" Disabled="AgreedToTerms">
                                <MudStack Spacing="2">

                                    <MudRadio Color="Color.Primary" Label="I Agree" Value="true" />
                                    <MudRadio Color="Color.Primary" Label="I Disagree" Value="false" />

                                </MudStack>
                            </MudRadioGroup>
                        </MudPaper>
                    </div>
                </div>
            }

            @foreach (var question in Survey.Questions.OrderBy(x => x.QuestionNumber))
            {
                int questionNumber = Survey.Questions.OrderBy(x => x.QuestionNumber).ToList().FindIndex(x => x.Id == question.Id) + 1;                
                <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(Preview && questionNumber == 1 ? new List<int>() { 0 } : new List<int>())">
                    <div class="question-container">
                        <MudText>
                            @if (question.IsRequired == true)
                            {
                                <MudText Color="Color.Error" Typo="Typo.caption" Class="RequiredStar">*</MudText>
                            }
                            <span id="@questionNumber" class="question-number">@questionNumber.</span>
                            <span class="question-text">@question.Text</span>
                        </MudText>

                        @if (question.Answers.Count > 0)
                        {
                            <div class="options-container">
                                <QuestionRenderer Question="question"
                                                  Disabled="@(ViewAnswers || (IsAnonymousUser && !AgreedToTerms))"
                                                  OnAnswerChanged="HandleAnswerQuestion"
                                                  OnSelectAllChanged="HandleSelectAllThatApplyOption" />

                            </div>
                        }                        
                    </div>
                    @if (questionNumber == 2)
                    {
                        string Step0Text = Preview ? @"This is what the survey will look like. 
Feel free to click around. Responses aren't saved in preview mode." : "Go ahead and answer all questions and then submit the survey to continue the demo.";
                        <DemoPopup CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 0 })" AnchorOrigin="Origin.TopLeft" TransformOrigin="Origin.TopLeft">
                            <MudText Typo="Typo.body2" Style="white-space:pre-line">@Step0Text</MudText>
                            <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 0 })" IsButton="true">
                                <MudButton id="DemoNext_button" OnClick="NextDemoStep" Variant="Variant.Filled" Color="Color.Success">Next</MudButton>
                            </DemoBorder>
                        </DemoPopup>
                    }
                </DemoBorder>                
            }

            if (!ViewAnswers)
            {
                <div class="text-center">
                    <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 1 })" IsButton="true">
                        <MudButton Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   Size="MudBlazor.Size.Large"
                                   OnClick="@(() => SubmitSurvey())"
                                   Disabled="@(Preview || (IsAnonymousUser && !AgreedToTerms))"
                                   title="@(Preview ? "Survey cannot be submitted in Preview mode" : "Submit")"
                                   Class="survey-submit-btn" id="survey-submit-btn">
                            Submit Survey
                        </MudButton>
                    </DemoBorder>
                    @{
                        string demoText = DemoStep == 1 ? @"The submit survey button is disabled in preview mode. 
It becomes active once all required questions are answered in a real survey." : DemoStep == 2 ? "Click Next to continue the demo." : "";
                    }
                    <DemoPopup CurrentDemoStep="@DemoStep" StepsToShow="@(Preview ? new List<int>() { 1, 2 } : new List<int>() { })" TransformOrigin="Origin.TopLeft" AnchorOrigin="Origin.BottomLeft">
                        <MudText Typo="Typo.body2" Style="white-space: pre-line;">@demoText</MudText>
                        <DemoBorder CurrentDemoStep="@DemoStep" StepsToShow="@(new List<int>() { 1, 2 })" IsButton="true">
                            <MudButton OnClick="NextDemoStep" Variant="Variant.Filled" Color="Color.Success">Next</MudButton>
                        </DemoBorder>
                    </DemoPopup>
                </div>
            }
        }
        else if (Loading)
        {
            <div class="d-flex justify-center my-8">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            </div>
        }
        else
        {
            <div class="d-flex justify-center my-8">
                <MudAlert Severity="Severity.Warning">Survey not found or could not be loaded.</MudAlert>
            </div>
        }
    }
</div>