@page "/survey/{SurveyId}"
@namespace JwtIdentity.Client.Pages.Survey
@inherits SurveyModel

@if (!isCaptchaVerified && !Preview)
{
    <div id="captcha-container">
        <!-- reCAPTCHA widget with data-callback pointing to our JS function -->
        <div class="g-recaptcha" data-sitekey=@Configuration["ReCaptcha:SiteKey"] data-callback="onCaptchaSuccess"></div>
    </div>
    <p>Please complete the CAPTCHA to proceed.</p>
}
else
{
    @if (Preview)
    {
        <MudAlert Severity="Severity.Info">You are in Preview Mode. You can answer the questions, but the answers will not be recorded. You cannot submit the survey.</MudAlert>
    }

    @if (Survey != null && Survey.Id > 0 && !Loading)
    {
        <MudText Typo="Typo.h4">@Survey.Title</MudText>
        <MudText Typo="Typo.h6">@Survey.Description</MudText>

        @foreach (var question in Survey.Questions.OrderBy(x => x.QuestionNumber))
        {
            int questionNumber = Survey.Questions.OrderBy(x => x.QuestionNumber).ToList().FindIndex(x => x.Id == question.Id) + 1;
            <MudText Typo="Typo.body1">@questionNumber. @question.Text</MudText>

            @if (question.Answers.Count > 0)
            {
                @if (question.QuestionType == QuestionType.MultipleChoice)
                {
                    MultipleChoiceAnswerViewModel answer = question.Answers.FirstOrDefault() as MultipleChoiceAnswerViewModel;

                    <MudRadioGroup @key="question" T="int" Value="answer.SelectedOptionId" ValueChanged="@((v) => HandleAnswerQuestion(answer, v))">
                        <MudStack Spacing="0">
                            @foreach (var option in ((MultipleChoiceQuestionViewModel)question).Options)
                            {
                                <MudRadio Label="@option.OptionText" Value="@option.Id" />
                            }
                        </MudStack>
                    </MudRadioGroup>
                }
                else if (question.QuestionType == QuestionType.Rating1To10)
                {
                    Rating1To10AnswerViewModel answer = question.Answers.FirstOrDefault() as Rating1To10AnswerViewModel;

                    <MudRadioGroup @key="question" T="int" Value="answer.SelectedOptionId" ValueChanged="@((v) => HandleAnswerQuestion(answer, v))">
                        <MudStack Row="true" Spacing="0">
                            @for (int i = 1; i <= 10; i++)
                            {
                                <MudRadio Label="@i.ToString()" Value="@i" LabelPlacement="Placement.Top"  />
                            }
                        </MudStack>
                    </MudRadioGroup>
                }
                else if (question.QuestionType == QuestionType.Text)
                {
                    TextAnswerViewModel answer = question.Answers.FirstOrDefault() as TextAnswerViewModel;

                    <MudTextField @key="question" T="string" Value="answer.Text" ValueChanged="@((t) => HandleAnswerQuestion(answer, t))" Label="Enter Answer Text" />
                }
                else if (question.QuestionType == QuestionType.TrueFalse)
                {
                    TrueFalseAnswerViewModel answer = question.Answers.FirstOrDefault() as TrueFalseAnswerViewModel;

                    <MudRadioGroup @key="question" T="bool?" Value="answer.Value" ValueChanged="@((v) => HandleAnswerQuestion(answer, v))">
                        <MudStack Spacing="0" Row="true">
                            <MudRadio T="bool?" Label="True" Value="true" />
                            <MudRadio T="bool?" Label="False" Value="false" />
                        </MudStack>
                    </MudRadioGroup>
                }
            }
        }


        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => SubmitSurvey())" Disabled="@Preview" title="@(Preview ? "Survey cannot be submitted in Preview mode" : "Submit")">Submit</MudButton>
    }
}