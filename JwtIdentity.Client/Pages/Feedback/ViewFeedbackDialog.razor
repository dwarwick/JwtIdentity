@using JwtIdentity.Common.ViewModels
@using MudBlazor

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudChip T="string" Color="@GetColorForFeedbackType(Feedback.Type)" Class="mr-2">@Feedback.Type</MudChip>
            @Feedback.Title
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12">
                <MudTextField T="string" Label="Your Description" Value="@Feedback.Description"
                            Lines="3" ReadOnly="true" />
            </MudItem>
            <MudItem xs="12" md="6">
                <MudTextField T="DateTime" Label="Submitted on" Value="@Feedback.CreatedDate" Format="yyyy-MM-dd HH:mm" ReadOnly="true" />
            </MudItem>
            <MudItem xs="12" md="6">
                <MudText>Status: 
                    <MudChip T="string" Color="@(Feedback.IsResolved ? Color.Success : Color.Warning)">
                        @(Feedback.IsResolved ? "Resolved" : "Pending")
                    </MudChip>
                </MudText>
            </MudItem>

            @if (!string.IsNullOrEmpty(Feedback.AdminResponse))
            {
                <MudItem xs="12">
                    <MudPaper Elevation="0" Class="pa-4 mud-background-gray rounded-lg">
                        <MudText Typo="Typo.subtitle1" Class="mb-2">Admin Response:</MudText>
                        <MudText>@Feedback.AdminResponse</MudText>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    
    [Parameter] 
    public FeedbackViewModel Feedback { get; set; } = new FeedbackViewModel();
    
    private void Close() => MudDialog.Close();
    
    private Color GetColorForFeedbackType(FeedbackType type)
    {
        return type switch
        {
            FeedbackType.Problem => Color.Error,
            FeedbackType.FeatureRequest => Color.Info,
            FeedbackType.GeneralFeedback => Color.Default,
            _ => Color.Default
        };
    }
}