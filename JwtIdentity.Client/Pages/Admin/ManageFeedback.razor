@page "/admin/feedback"
@using JwtIdentity.Common.ViewModels
@attribute [Authorize(Roles = "Admin")]
@inherits ManageFeedbackModel

<MudContainer Class="mt-4 px-8" MaxWidth="MaxWidth.ExtraLarge">
    <MudText Typo="Typo.h4" Class="mb-4">Manage Feedback</MudText>

    <MudGrid>
        <MudItem xs="12">
            @if (_loading)
            {
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                <MudText Class="ml-2">Loading feedback...</MudText>
            }
            else
            {
                <MudPaper Class="pa-4">
                    <!-- Filters above the grid -->
                    <MudGrid>
                        <MudItem xs="12" md="4">
                            <MudTextField @bind-Value="@_searchString" Placeholder="Search" 
                                     Adornment="Adornment.Start" 
                                     AdornmentIcon="@Icons.Material.Filled.Search" 
                                     IconSize="MudBlazor.Size.Medium"
                                     Immediate="true"
                                     OnKeyDown="@(e => { if (e.Key == "Enter") ApplyFilters(); })"
                                     Class="mb-3"></MudTextField>
                        </MudItem>
                        <MudItem xs="12" md="3">                
                            <MudSelect T="string" Label="Status Filter" Value="@_statusFilter" ValueChanged="@(value => FilterByStatus(value))" Class="mb-3">
                                <MudSelectItem Value="@("all")">All</MudSelectItem>
                                <MudSelectItem Value="@("resolved")">Resolved</MudSelectItem>
                                <MudSelectItem Value="@("unresolved")">Unresolved</MudSelectItem>
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="12" md="3">
                            <MudSelect T="string" Label="Type Filter" Value="@_typeFilter" ValueChanged="@(value => FilterByType(value))" Class="mb-3">
                                <MudSelectItem Value="@("all")">All Types</MudSelectItem>
                                <MudSelectItem Value="@(FeedbackType.Problem.ToString())">Problem/Complaint</MudSelectItem>
                                <MudSelectItem Value="@(FeedbackType.FeatureRequest.ToString())">Feature Request</MudSelectItem>
                                <MudSelectItem Value="@(FeedbackType.GeneralFeedback.ToString())">General Feedback</MudSelectItem>
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="12" md="2" Class="d-flex align-center justify-end">
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => ApplyFilters())" Class="mb-3">
                                Apply Filters
                            </MudButton>
                        </MudItem>
                    </MudGrid>

                    <!-- Syncfusion Grid -->
                    <SfGrid DataSource="@FeedbackItems" AllowPaging="true" AllowSorting="true" AllowFiltering="true" AllowResizing="true" FrozenColumns="@FrozenColumns" AllowTextWrap="true" TextWrapSettings="@GridSettings.TextWrapSettings" GridLines="@GridSettings.GridLines">
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        <GridColumns>
                            <GridColumn HeaderText="Actions" Width="250" AutoFit="true" AllowResizing="false" AllowReordering="false">
                                <Template Context="feedbackContext">
                                    @{
                                        var feedback = feedbackContext as FeedbackViewModel;
                                        if (feedback != null)
                                        {
                                            <MudStack Row="true" Spacing="1">
                                                <MudButton Variant="Variant.Filled" 
                                                          Color="Color.Primary" 
                                                          Size="MudBlazor.Size.Small"
                                                          OnClick="@(() => OpenFeedbackDialog(feedback))">
                                                    View Details
                                                </MudButton>
                                                <MudButton Variant="Variant.Filled" 
                                                          Color="@(feedback.IsResolved ? Color.Warning : Color.Success)" 
                                                          Size="MudBlazor.Size.Small"
                                                          OnClick="@(() => ToggleResolvedStatus(feedback))">
                                                    @(feedback.IsResolved ? "Mark Unresolved" : "Mark Resolved")
                                                </MudButton>
                                            </MudStack>
                                        }
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="Id" HeaderText="ID" Width="70" TextAlign="TextAlign.Right" />
                            <GridColumn Field="Title" HeaderText="Title" Width="200" />
                            <GridColumn Field="Type" HeaderText="Type" Width="140">
                                <Template Context="feedbackContext">
                                    @{
                                        var feedback = feedbackContext as FeedbackViewModel;
                                        if (feedback != null)
                                        {
                                            <MudChip T="string" Color="@(GetColorForFeedbackType(feedback.Type))" Size="MudBlazor.Size.Small">@(feedback.Type)</MudChip>
                                        }
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="Description" HeaderText="Description" Width="350">
                                <Template Context="feedbackContext">
                                    @{
                                        var feedback = feedbackContext as FeedbackViewModel;
                                        if (feedback != null)
                                        {
                                            <MudText>@(feedback.Description?.Length > 50 ? feedback.Description.Substring(0, 47) + "..." : feedback.Description)</MudText>
                                        }
                                    }
                                </Template>
                            </GridColumn>
                            <GridColumn Field="Email" HeaderText="Email" Width="200" />
                            <GridColumn Field="CreatedDate" HeaderText="Date" Width="160" Type="ColumnType.Date" Format="yyyy-MM-dd HH:mm" />
                            <GridColumn Field="IsResolved" HeaderText="Status" Width="120">
                                <Template Context="feedbackContext">
                                    @{
                                        var feedback = feedbackContext as FeedbackViewModel;
                                        if (feedback != null)
                                        {
                                            <MudChip T="string" Color="@(feedback.IsResolved ? Color.Success : Color.Warning)">
                                                @(feedback.IsResolved ? "Resolved" : "Pending")
                                            </MudChip>
                                        }
                                    }
                                </Template>
                            </GridColumn>
                        </GridColumns>
                    </SfGrid>
                </MudPaper>
            }
        </MudItem>
    </MudGrid>
</MudContainer>